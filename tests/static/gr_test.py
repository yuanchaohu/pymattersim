# coding = utf-8

import os
import unittest
import numpy as np
from reader.dump_reader import DumpReader
from static.gr import gr
from utils.logging_utils import get_logger_handle

logger = get_logger_handle(__name__)

READ_TEST_FILE_PATH = "tests/sample_test_data"


class TestPCF(unittest.TestCase):
    """
    Test class for pcf
    """

    def setUp(self) -> None:
        super().setUp()
        self.test_file_unary = f"{READ_TEST_FILE_PATH}/unary.dump"
        self.test_file_binary = f"{READ_TEST_FILE_PATH}/dump_2D.atom"
        self.test_file_ternary = f"{READ_TEST_FILE_PATH}/ternary.dump"
        self.test_file_quarternary = f"{READ_TEST_FILE_PATH}/quarternary.dump"

    def test_PCF_unary(self) -> None:
        """
        Test PCF works properly for unary system
        """
        logger.info(f"Starting test using {self.test_file_unary}...")
        readdump = DumpReader(self.test_file_unary, ndim=3)
        readdump.read_onefile()
        gr(readdump.snapshots, ppp=[1,1,1], rdelta=0.01, outputfile='gr_unary.dat').getresults()

        result = np.loadtxt('gr_unary.dat', skiprows=1)
        np.testing.assert_almost_equal([0.98846 , 1.03977 , 0.971141, 0.975807, 0.980452, 1.117302,
                            1.016072, 1.093032, 0.854259, 1.016484, 1.138785, 0.894824,
                            1.147242, 0.936766, 0.993315, 1.082031, 1.06693 , 1.109968,
                            1.101307, 1.092679, 0.994278, 0.992295, 0.945595, 1.058489,
                            0.967292, 0.939966, 1.191642, 0.974197, 0.921761, 1.108965,
                            0.8741  , 1.098313, 1.071092, 1.01897 , 1.204136, 0.952697,
                            1.01297 , 1.079208, 0.928528, 1.180009, 1.08521 , 0.984626,
                            1.056406, 1.023695, 0.911576, 1.038028, 1.029914, 0.930595,
                            1.06841 , 0.95728 , 1.070318, 0.95961 , 1.090274, 1.100191,
                            0.906055, 1.018095, 0.992224, 0.978383, 0.98841 , 0.980568,
                            0.95496 , 1.01825 , 0.980847, 1.032046, 0.982984, 0.998731,
                            1.014416, 0.907137, 0.981347, 0.944498, 1.175468, 1.103538,
                            1.060865, 0.908415, 1.051073, 0.9338  , 0.909022, 1.240366,
                            0.962909, 1.138439, 0.947864, 1.094262, 1.035319, 1.10151 ,
                            1.014435, 1.097382, 0.829965, 0.997475, 0.989986, 1.027438,
                            0.969482, 1.051577, 1.099867, 0.958503, 1.067968, 0.971601,
                            0.997507, 1.128412, 1.026941, 0.925844],
                          result[-100:, 1])
        os.remove("gr_unary.dat")

    def test_PCF_binary(self) -> None:
        """
        Test PCF works properly for binary system
        """
        logger.info(f"Starting test using {self.test_file_binary}...")
        readdump = DumpReader(self.test_file_binary, ndim=2)
        readdump.read_onefile()
        gr(readdump.snapshots, ppp=[1,1], rdelta=0.01, outputfile='gr_binary.dat').getresults()

        result = np.loadtxt('gr_binary.dat', skiprows=1)
        np.testing.assert_almost_equal([1.001236, 0.993005, 1.000139, 0.997416, 0.995915, 1.002123,
                            0.997806, 0.996772, 1.000836, 0.995445, 1.002179, 0.994418,
                            1.001498, 0.994907, 1.01135 , 0.998206, 1.003196, 0.99749 ,
                            1.000846, 0.999633, 1.002225, 0.996045, 1.001339, 0.997826,
                            1.00525 , 1.001156, 1.006044, 1.003773, 1.002277, 1.002965,
                            1.001031, 0.999034, 0.998354, 0.996745, 1.006335, 1.002713,
                            0.996913, 0.998968, 0.998392, 1.008887, 0.998026, 0.997669,
                            0.996089, 1.000769, 1.007326, 1.000402, 0.996481, 1.004527,
                            0.996117, 1.002141, 1.001308, 0.996683, 0.995518, 1.002758,
                            0.998495, 1.001326, 0.992891, 0.997403, 1.005124, 0.997848,
                            0.999867, 1.001218, 0.997553, 1.00406 , 1.001716, 0.995347,
                            0.994378, 0.994498, 1.000935, 0.997595, 1.008704, 0.998052,
                            1.001116, 1.000953, 0.99443 , 0.995279, 1.003062, 0.997079,
                            1.00418 , 0.999056, 1.005081, 1.00102 , 1.001828, 0.998881,
                            0.998859, 1.002732, 0.998548, 0.996126, 0.994446, 0.991427,
                            0.9991  , 0.999371, 1.001568, 0.999047, 1.000798, 1.004331,
                            1.000537, 1.001522, 1.002302, 1.003935],
                          result[-100:, 1])
        np.testing.assert_almost_equal([1.011121, 0.989807, 1.006009, 1.005307, 0.996787, 0.998568,
                            1.005743, 1.002534, 1.000231, 0.997579, 1.000232, 0.987413,
                            0.999067, 0.988554, 1.016451, 0.998574, 0.998633, 0.996073,
                            0.999565, 1.001951, 1.003841, 0.991977, 1.001543, 0.994655,
                            1.001602, 1.000556, 1.007963, 1.007148, 1.003808, 1.006885,
                            0.996784, 0.998787, 0.998527, 1.00079 , 1.003284, 1.005574,
                            0.99279 , 0.997197, 0.991286, 1.005426, 1.000125, 1.001747,
                            0.99668 , 0.99836 , 1.012541, 0.995439, 0.996076, 1.005998,
                            0.997033, 1.003076, 1.003596, 0.99536 , 0.99617 , 1.003364,
                            0.99623 , 0.999841, 0.993778, 0.994703, 1.011674, 0.995514,
                            1.005323, 0.996065, 1.005207, 0.998056, 1.000939, 0.999643,
                            0.995897, 0.992615, 0.999615, 0.993108, 1.003992, 0.997573,
                            0.999645, 0.996021, 0.99303 , 0.99933 , 1.005024, 0.994703,
                            1.004074, 1.00166 , 1.005567, 0.999132, 1.003297, 0.993476,
                            0.999076, 1.001889, 0.994859, 0.994774, 0.997816, 0.987205,
                            0.99733 , 1.003122, 1.006934, 0.99653 , 1.001431, 1.003379,
                            0.999054, 1.006957, 1.004838, 1.00893],
                          result[-100:, 2])
        np.testing.assert_almost_equal([0.994273, 0.993837, 0.997843, 0.989573, 0.991563, 1.009474,
                            0.991247, 0.989643, 1.000361, 0.998552, 1.003952, 1.004185,
                            1.003426, 1.001851, 1.006517, 0.998557, 1.008585, 1.004475,
                            1.001386, 0.996201, 0.999727, 0.997951, 1.001184, 1.003338,
                            1.007704, 1.001825, 1.005578, 1.002989, 1.002262, 1.000838,
                            1.004588, 1.000461, 0.997004, 0.991428, 1.011789, 1.00206 ,
                            0.998316, 1.003222, 1.004528, 1.011984, 0.994026, 0.996899,
                            0.992406, 1.00499 , 1.004903, 0.999252, 0.99876 , 1.002671,
                            0.993781, 0.995896, 0.999574, 0.995725, 0.997608, 1.00001 ,
                            0.999403, 1.002065, 0.991512, 1.000128, 0.997499, 0.996778,
                            0.996981, 1.006919, 0.991468, 1.010902, 1.0025  , 0.989455,
                            0.988361, 0.997913, 1.003914, 0.99904 , 1.014322, 0.999474,
                            1.002213, 1.006708, 0.990488, 0.98954 , 0.998124, 0.995102,
                            1.007338, 0.998156, 1.004113, 1.000891, 1.000259, 1.003279,
                            1.000375, 0.999542, 1.005664, 0.994659, 0.993827, 0.996127,
                            0.996904, 0.99768 , 1.000207, 1.000036, 0.997626, 1.006922,
                            1.002017, 0.993357, 0.999379, 0.998148],
                          result[-100:, 3])
        os.remove("gr_binary.dat")

    def test_PCF_ternary(self) -> None:
        """
        Test PCF works properly for ternary system
        """
        logger.info(f"Starting test using {self.test_file_ternary}...")
        readdump = DumpReader(self.test_file_ternary, ndim=3)
        readdump.read_onefile()
        gr(readdump.snapshots, ppp=[1,1,1], rdelta=0.01, outputfile='gr_ternary.dat').getresults()

        result = np.loadtxt('gr_ternary.dat', skiprows=1)
        np.testing.assert_almost_equal([1.0168  , 1.009425, 1.005704, 1.007394, 0.999105, 0.996447,
                            0.999955, 1.008682, 0.992835, 0.988212, 0.996981, 1.002667,
                            0.99821 , 0.997044, 1.009004, 0.998432, 1.005349, 1.00778 ,
                            0.999087, 0.996998, 1.002151, 0.984235, 0.99928 , 1.009469,
                            0.989798, 0.994664, 0.993996, 0.997876, 1.0163  , 1.001239,
                            0.997165, 0.998925, 1.010657, 1.011325, 0.999986, 1.006794,
                            1.010204, 0.999482, 0.996237, 1.007369, 0.988689, 1.003129,
                            0.993844, 1.009273, 1.008651, 0.994098, 1.006023, 1.004125,
                            1.001271, 0.991716, 1.002913, 0.996294, 1.000515, 0.990724,
                            1.005226, 0.985593, 0.996212, 1.000574, 1.002974, 1.007535,
                            1.011666, 1.001344, 0.999414, 1.002067, 1.001507, 0.981973,
                            0.9975  , 0.999935, 1.004726, 1.005632, 0.999101, 0.998021,
                            1.005882, 0.994611, 0.996877, 1.001747, 1.012707, 1.0011  ,
                            0.986387, 0.992133, 0.992518, 0.993265, 0.998266, 0.999111,
                            1.013786, 0.989253, 0.991499, 1.006145, 0.990091, 1.01514 ,
                            0.997247, 0.999683, 1.003196, 0.997237, 0.999615, 1.000499,
                            1.002819, 1.010829, 0.995967, 0.994699],
                          result[-100:, 1])
        np.testing.assert_almost_equal([1.017506, 1.004011, 1.013535, 1.002278, 1.002175, 0.992544,
                            1.005931, 1.01199 , 0.992943, 0.986084, 0.996091, 0.99622 ,
                            0.9965  , 0.999506, 0.999403, 1.004292, 1.009551, 1.008685,
                            0.996351, 0.98856 , 1.001724, 0.983928, 1.001362, 1.00321 ,
                            0.989209, 0.989862, 1.001087, 0.995961, 1.021162, 0.999346,
                            0.998941, 0.997341, 1.018134, 1.007274, 1.00269 , 1.008909,
                            1.011473, 0.998495, 0.999279, 1.015353, 0.982969, 1.000883,
                            0.997959, 1.002957, 1.01194 , 0.995567, 1.008306, 1.005976,
                            1.006672, 0.994551, 1.006809, 0.995882, 1.003123, 0.988177,
                            1.004436, 0.981373, 0.994389, 0.999917, 1.00317 , 1.002324,
                            1.009877, 1.006181, 0.996583, 1.005289, 1.000366, 0.979299,
                            0.991778, 1.001185, 1.009054, 1.009513, 1.006347, 0.999999,
                            1.001403, 1.004757, 0.991849, 1.000186, 1.01558 , 1.002405,
                            0.985864, 0.989572, 0.989176, 0.996253, 0.997288, 0.99789 ,
                            1.014981, 0.98863 , 0.99167 , 1.00608 , 0.988158, 1.013048,
                            0.999786, 1.003732, 1.004537, 0.998574, 0.997815, 1.008007,
                            0.997721, 1.011872, 0.99117 , 0.988078],
                          result[-100:, 2])
        np.testing.assert_almost_equal([0.995237, 0.861859, 0.905343, 1.1694  , 0.925965, 1.299737,
                            0.968533, 1.011761, 1.076899, 0.85645 , 1.009379, 0.789329,
                            1.073521, 0.831873, 1.006215, 0.917998, 0.917279, 0.741978,
                            1.024872, 1.089437, 0.936183, 1.087733, 1.108621, 1.259799,
                            0.976667, 1.149399, 0.845124, 0.757853, 0.973623, 1.016103,
                            1.080118, 0.798665, 1.100005, 0.88363 , 0.882942, 0.882256,
                            1.247099, 1.224645, 0.880201, 1.051131, 1.02888 , 1.006663,
                            0.72766 , 0.919562, 1.089798, 0.83273 , 0.917427, 1.023312,
                            0.979915, 1.149445, 0.872052, 0.913885, 1.104309, 1.082236,
                            1.017789, 0.974629, 1.100904, 0.973126, 0.972376, 1.013871,
                            0.928666, 1.09667 , 1.285488, 0.968639, 0.904771, 0.862025,
                            0.840354, 0.986657, 1.027853, 0.85938 , 0.963443, 1.27663 ,
                            1.212914, 1.274673, 1.044014, 1.064079, 1.021568, 0.812462,
                            0.915923, 0.769619, 1.163939, 0.83075 , 0.747104, 0.808745,
                            0.994619, 0.745395, 0.848275, 1.054367, 1.074222, 0.990834,
                            1.155093, 0.989326, 1.173931, 1.008401, 1.254403, 0.780837,
                            1.252497, 0.86172 , 0.758558, 1.126731],
                          result[-100:, 3])
        np.testing.assert_almost_equal([1.056057, 0.939205, 1.065434, 1.053563, 1.008641, 1.101472,
                            1.029066, 1.011761, 0.857123, 0.894881, 0.877721, 1.030512,
                            0.991364, 0.952276, 1.006215, 0.90707 , 1.048319, 0.905649,
                            0.975809, 0.94781 , 1.050484, 1.038785, 1.037973, 0.977431,
                            0.998371, 0.99217 , 1.061823, 0.963556, 0.93576 , 0.913411,
                            1.080118, 0.95516 , 0.900494, 0.986001, 0.872175, 0.930672,
                            1.13959 , 1.03128 , 1.04658 , 0.933147, 1.02888 , 0.85138 ,
                            0.963079, 1.021142, 1.047061, 0.998208, 0.992101, 1.017982,
                            0.985241, 0.95255 , 0.967766, 1.03609 , 0.934416, 1.029185,
                            1.054896, 0.985222, 1.042683, 1.115922, 0.961807, 1.071958,
                            0.970878, 0.933224, 1.080021, 1.026547, 1.062579, 1.030225,
                            0.929642, 0.960417, 0.959679, 1.021824, 0.937263, 0.967936,
                            1.066528, 0.971677, 1.090995, 1.017134, 0.979871, 1.124948,
                            1.082455, 1.107628, 0.940504, 1.028053, 1.162162, 0.865772,
                            0.942816, 0.905862, 0.915516, 0.899313, 0.970931, 1.155973,
                            1.05196 , 0.886271, 0.947383, 1.137024, 1.012776, 0.97091 ,
                            0.995838, 0.928401, 0.927696, 1.05503],
                          result[-100:, 4])
        os.remove("gr_ternary.dat")

    def test_PCF_quarternary(self) -> None:
        """
        Test PCF works properly for quarternary system
        """
        logger.info(f"Starting test using {self.test_file_quarternary}...")
        readdump = DumpReader(self.test_file_quarternary, ndim=3)
        readdump.read_onefile()
        gr(readdump.snapshots, ppp=[1,1,1], rdelta=0.01, outputfile='gr_quarternary.dat').getresults()

        result = np.loadtxt('gr_quarternary.dat', skiprows=1)
        np.testing.assert_almost_equal([0.      , 0.      , 0.      , 0.      , 0.      , 0.      ,
                        0.      , 0.      , 0.      , 0.      , 0.      , 0.      ,
                        0.      , 0.      , 0.      , 0.      , 0.      , 0.      ,
                        0.      , 0.      , 0.      , 0.      , 0.027048, 0.259896,
                        0.670725, 1.414624, 1.957306, 2.273572, 2.005711, 2.251793,
                        1.725767, 1.295846, 1.241848, 1.029381, 0.884735, 0.845676,
                        0.693159, 0.632296, 0.785706, 0.672675, 0.705093, 0.733592,
                        0.754896, 0.769904, 0.904779, 0.939575, 0.97673 , 1.063376,
                        1.082231, 1.033087, 1.097214, 1.132865, 1.140721, 1.091112,
                        1.042108, 1.052326, 1.038134, 1.028323, 1.02442 , 1.027732,
                        0.977377, 0.894458, 0.894893, 1.007327, 0.928033, 0.88418 ,
                        0.913377, 0.987255, 0.914435, 0.959854, 0.970165, 1.049857,
                        0.99685 , 1.048606, 1.01448 , 0.933925, 1.032311, 1.01455 ,
                        0.991957, 0.989116, 1.061014, 1.014975, 0.96206 , 0.989558,
                        0.966151, 1.059011, 0.974155, 1.003098, 0.994861, 0.979276,
                        1.003868, 1.072359, 0.994088, 1.013845, 0.988683, 1.020392,
                        0.991415, 0.986448, 1.004047, 0.999291, 1.007004, 0.983952,
                        0.989387, 0.973993, 1.029458, 0.981352, 1.02549 , 1.005847,
                        1.012659],
                        result[:, 1][::10])
        np.testing.assert_almost_equal([0.      , 0.      , 0.      , 0.      , 0.      , 0.      ,
                        0.      , 0.      , 0.      , 0.      , 0.      , 0.      ,
                        0.      , 0.      , 0.      , 0.      , 0.      , 0.      ,
                        0.      , 0.      , 0.      , 0.      , 0.      , 0.140064,
                        0.540364, 1.316359, 1.919065, 2.166268, 1.976731, 2.336796,
                        1.738844, 1.281304, 1.19535 , 1.035542, 0.885752, 0.854103,
                        0.704307, 0.623431, 0.81211 , 0.663688, 0.691271, 0.733076,
                        0.71125 , 0.742836, 0.882071, 0.909347, 0.91941 , 1.075717,
                        1.092648, 1.011433, 1.111043, 1.142184, 1.16464 , 1.081484,
                        1.059667, 1.058352, 1.054086, 1.040321, 1.035704, 1.039338,
                        0.992628, 0.91046 , 0.906477, 1.027708, 0.936007, 0.863484,
                        0.91259 , 1.003096, 0.935264, 0.966119, 0.955414, 1.034848,
                        0.970484, 1.054263, 1.001553, 0.944653, 1.040921, 1.019091,
                        0.972377, 0.997948, 1.056784, 1.029735, 0.984891, 1.012025,
                        0.960698, 1.052433, 0.965804, 1.017395, 0.994417, 0.970332,
                        1.000292, 1.059228, 0.991548, 1.010746, 0.982636, 1.012314,
                        0.995378, 0.983662, 0.993888, 0.998193, 1.008075, 0.982392,
                        0.981812, 0.977565, 1.031725, 0.97239 , 1.010381, 1.008476,
                        1.014755],
                        result[:, 2][::10])
        os.remove("gr_quarternary.dat")
